openapi: 3.1.0
info:
  title: StudentManagement
  description: 受講生の登録・検索・更新、コースマスタの登録・検索・更新を行うAPI
  contact:
    name: 管理者
    email: admin@example.com
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: 旧URIリダイレクト
    description: 旧URIリダイレクト用API
  - name: 受講生管理
    description: 受講生情報の登録・検索・更新を行うAPI
  - name: コースマスタ管理
    description: コースマスタの登録・検索・更新を行うAPI
paths:
  /students/{studentId}:
    get:
      tags:
        - 受講生管理
      summary: 受講生検索
      description: パスパラメータで指定された受講生IDで検索を行います。
      operationId: getStudent
      parameters:
        - name: studentId
          in: path
          description: 検索する受講生のID
          required: true
          schema:
            type: integer
            format: int32
          example: 12
      responses:
        '200':
          description: 成功
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDetail'
        '404':
          description: 該当する受講生が見つかりません
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDetail'
        '500':
          description: サーバーエラー
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDetail'
    put:
      tags:
        - 受講生管理
      summary: 受講生更新
      description: 指定IDの受講生詳細情報を更新します。
      operationId: updateStudent
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDetail'
        required: true
      responses:
        '200':
          description: 成功
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: 更新処理に失敗しました
          content:
            '*/*':
              schema:
                type: string
        '500':
          description: サーバーエラー
          content:
            '*/*':
              schema:
                type: string
    patch:
      tags:
        - 受講生管理
      summary: 受講生論理削除
      description: 指定IDの受講生情報を非表示にします。
      operationId: patchStudent
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: boolean
        required: true
      responses:
        '204':
          description: 成功
        '400':
          description: 更新処理に失敗しました
        '500':
          description: サーバーエラー
  /courses/{courseId}:
    put:
      tags:
        - コースマスタ管理
      summary: コースマスタ更新
      description: 既存のコースマスタを更新します。
      operationId: updateCourseMaster
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        '200':
          description: 成功
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: 更新処理に失敗しました
          content:
            '*/*':
              schema:
                type: string
        '404':
          description: 更新対象コースマスタが見つかりません
          content:
            '*/*':
              schema:
                type: string
        '500':
          description: サーバーエラー
          content:
            '*/*':
              schema:
                type: string
    patch:
      tags:
        - コースマスタ管理
      summary: コースマスタ閉講
      description: 開講中のコースマスタを閉講に変更
      operationId: patchCourseMaster
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: boolean
        required: true
      responses:
        '200':
          description: 成功
        '400':
          description: 更新処理に失敗しました
        '500':
          description: サーバーエラー
  /students:
    get:
      tags:
        - 受講生管理
      summary: 受講生詳細検索
      description: クエリパラメータから取得した条件で検索を行います。
      operationId: searchStudents
      parameters:
        - name: searchForm
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/StudentSearchForm'
      responses:
        '200':
          description: 成功
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDetail'
        '404':
          description: 該当する受講生が見つかりません
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDetail'
        '500':
          description: サーバーエラー
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDetail'
    post:
      tags:
        - 受講生管理
      summary: 受講生登録
      description: 新規受講生の詳細情報を登録します。
      operationId: registerStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDetail'
        required: true
      responses:
        '201':
          description: 成功
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDetail'
        '400':
          description: 更新処理に失敗しました
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDetail'
        '500':
          description: サーバーエラー
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentDetail'
  /courses:
    get:
      tags:
        - コースマスタ管理
      summary: コースマスタ全件取得
      description: コースマスタを全件取得します
      operationId: getCourses
      responses:
        '200':
          description: 成功
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '404':
          description: コースマスタが見つかりません
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '500':
          description: サーバーエラー
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      tags:
        - コースマスタ管理
      summary: コースマスタ登録
      description: 新規コースマスタを登録します。
      operationId: registerCourseMaster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        '201':
          description: 成功
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: 登録処理に失敗しました
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Course'
        '500':
          description: サーバーエラー
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Course'
  /studentList:
    get:
      tags:
        - 旧URIリダイレクト
      summary: /students リダイレクト
      description: 旧URIのハンドリングメソッドです。
      operationId: redirectStudents
      responses:
        '200':
          description: OK
components:
  schemas:
    CourseDetail:
      type: object
      description: 受講コース詳細情報
      properties:
        course:
          $ref: '#/components/schemas/StudentsCourse'
          description: 受講コース情報
        status:
          $ref: '#/components/schemas/CourseStatus'
          description: 受講ステータス
    CourseStatus:
      type: object
      description: 受講ステータス
      properties:
        id:
          type: integer
          format: int32
          description: 受講ステータスID
          example: 100
        attendingId:
          type: integer
          format: int64
          description: 受講ID
          example: 12
        status:
          type: string
          description: 受講・申し込み状況
          enum:
            - 仮申し込み
            - 本申し込み
            - 受講中
            - 受講終了
          example: 仮申し込み/本申し込み/受講中/受講終了
    Student:
      type: object
      description: 受講生情報
      properties:
        studentId:
          type: integer
          format: int32
          description: 受講生ID
          example: 12
        fullName:
          type: string
          description: 受講生氏名
          example: 山田 太郎
        namePronunciation:
          type: string
          description: 氏名ふりがな
          example: やまだ たろう
        nickname:
          type: string
          description: ニックネーム
          example: たろ
        email:
          type: string
          description: Emailアドレス
        area:
          type: string
          description: 居住地域
          example: 神奈川県横浜市
        birthDate:
          type: string
          format: date
          description: 生年月日
        gender:
          type: string
          description: 性別
          example: Female
          pattern: Male|Female|Other
        remark:
          type: string
          description: 備考情報
        deleted:
          type: boolean
      required:
        - area
        - email
        - fullName
        - gender
        - namePronunciation
        - nickname
    StudentDetail:
      type: object
      description: 受講生詳細情報
      properties:
        student:
          $ref: '#/components/schemas/Student'
          description: 受講生情報
        courseDetailList:
          type: array
          description: 受講コース詳細情報リスト
          items:
            $ref: '#/components/schemas/CourseDetail'
    StudentsCourse:
      type: object
      description: 受講コース情報
      properties:
        attendingId:
          type: integer
          format: int64
          description: 受講ID
          example: 19
        studentId:
          type: integer
          format: int32
          description: 受講生ID
          example: 21
        courseId:
          type: integer
          format: int32
          description: 受講コースID
          example: 1
        startDate:
          type: string
          format: date-time
          description: コース受講開始日
          example: '2025-01-01'
        endDate:
          type: string
          format: date-time
          description: コース受講終了日
          example: '2025-06-30'
      required:
        - attendingId
        - courseId
    Course:
      type: object
      description: コースマスタ
      properties:
        courseId:
          type: integer
          format: int32
          description: コースID
          example: 1
        courseName:
          type: string
          description: コース名
          enum:
            - Javaコース
            - AWSコース
            - WordPressコース
            - デザインコース
            - webマーケティングコース
            - 映像制作コース
            - フロントエンドコース
          example: Javaコース
        category:
          type: string
          description: コースカテゴリ
          enum:
            - 開発系コース
            - 制作系コース
          example: 開発系コース
        duration:
          type: integer
          format: int32
          description: コース開講期間（月単位）
          example: 6
        createdAt:
          type: string
          format: date-time
          description: 登録日時
        updatedAt:
          type: string
          format: date-time
          description: 更新日時
        closed:
          type: boolean
      required:
        - category
        - courseName
        - duration
    StudentSearchForm:
      type: object
      description: 検索フォーム
      properties:
        name:
          type: string
          description: 氏名・ふりがな・ニックネームの検索条件
          example: たろ
        minAge:
          type: integer
          format: int32
          description: 検索する最少年齢
          example: 25
        maxAge:
          type: integer
          format: int32
          description: 検索する最長年齢
          example: 30
        area:
          type: string
          description: 検索する地域(部分一致)
          example: 東京
        email:
          type: string
          description: 検索するメールアドレス
          example: sample@test.com
        gender:
          type: string
          description: 検索する性別
          example: Female
        remark:
          type: string
          description: 備考欄の検索条件(部分一致)
          example: 料理
        courseId:
          type: integer
          format: int32
          description: 検索するコースID
          example: 1
        category:
          type: string
          description: 検索するコースカテゴリ
          example: 開発系コース
        startDate:
          type: string
          format: date
          description: 検索する受講開始日
          example: '2000-01-01'
        endDate:
          type: string
          format: date
          description: 検索する受講終了日
          example: '2000-01-01'
        status:
          type: array
          description: 検索する受講ステータス（リスト）
          example: '[仮申し込み, 受講中]'
          items:
            type: string
